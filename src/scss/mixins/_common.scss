@import '../variables';

@mixin spacing($margin: null, $padding: null) {
  @if $margin {
    margin: $margin;
  }
  @if $padding {
    padding: $padding;
  }
}

@mixin margin-padding($top: null, $right: null, $bottom: null, $left: null, $type: 'margin') {
  @if $type == 'margin' {
    @if $top { margin-top: $top; }
    @if $right { margin-right: $right; }
    @if $bottom { margin-bottom: $bottom; }
    @if $left { margin-left: $left; }
  } @else if $type == 'padding' {
    @if $top { padding-top: $top; }
    @if $right { padding-right: $right; }
    @if $bottom { padding-bottom: $bottom; }
    @if $left { padding-left: $left; }
  }
}

@mixin transition($property: all, $duration: $transition-base, $timing: ease-in-out, $delay: 0s) {
  transition: $property $duration $timing $delay;
}

@mixin box-shadow($shadow: $box-shadow) {
  box-shadow: $shadow;
}

@mixin border-radius($radius: $border-radius) {
  border-radius: $radius;
}

@mixin flex-center($direction: row) {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: $direction;
}

@mixin flex-between($direction: row) {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: $direction;
}

@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  @if $top { top: $top; }
  @if $right { right: $right; }
  @if $bottom { bottom: $bottom; }
  @if $left { left: $left; }
}

@mixin font($size: $font-size-base, $weight: $font-weight-normal, $line-height: $line-height-base) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
}

@mixin media-breakpoint-up($name) {
  $min: map-get($grid-breakpoints, $name);
  @if $min != 0 {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name) {
  $max: map-get($grid-breakpoints, $name) - 0.02;
  @media (max-width: $max) {
    @content;
  }
}

@mixin button-variant($background, $border, $color: $white) {
  color: $color;
  background-color: $background;
  border-color: $border;
  
  &:hover {
    color: $color;
    background-color: darken($background, 7.5%);
    border-color: darken($border, 10%);
  }
  
  &:focus {
    color: $color;
    background-color: darken($background, 7.5%);
    border-color: darken($border, 10%);
    box-shadow: 0 0 0 0.2rem rgba($border, 0.5);
  }
}

@mixin card-variant($bg-color: $white, $border-color: $gray-300) {
  background-color: $bg-color;
  border: 1px solid $border-color;
  @include border-radius($border-radius-lg);
  @include box-shadow($box-shadow-sm);
  
  &:hover {
    @include box-shadow($box-shadow);
    transform: translateY(-2px);
  }
}

@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin visually-hidden() {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin hover-lift($lift: -5px, $shadow: $box-shadow-lg) {
  @include transition(all, 0.3s, ease);
  
  &:hover {
    transform: translateY($lift);
    @include box-shadow($shadow);
  }
}
